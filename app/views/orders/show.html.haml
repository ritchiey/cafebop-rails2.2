-shop = @order.shop 

-content_for :aside do
  -if @order.can_send_invites?
    =button_to "Offer Friends", invite_order_path(@order), :method=>:get
  -unless @order.child_orders.empty?
    %table
      %thead
        %tr
          %th Friend
          %th Status
      != render :partial => 'child_order', :collection=>@order.child_orders
  -else
    -if @order.can_send_invites?
      See if your friends or co-workers want anything from #{@order.shop}.
    -else
      This order will be collected from #{@order.parent.shop} by #{@order.user}.
  != render :partial => 'close_time_counter'
  

-content_for :content_header do
  = render :partial => 'shops/page_header', :locals=>{:shop=>shop}

.no-print
  -if @order.pending?
    =button_to "&lt;&lt; Change", edit_order_path(@order), :method=>:get
    
    -if @order.is_child?
      =button_to "Confirm Order", confirm_order_path(@order), :method=>:put
    -else
      -if shop.accepts_in_shop_payments?
        =button_to "Pay In Shop &gt;&gt;", pay_in_shop_order_path(@order), :method=>:put, :class=>'confirm-link order-closed', :disabled=>@order.waiting_for_close?
        %br

      -if shop.accepts_paypal_payments?
        =button_to "Pay with PayPal &gt;&gt;", pay_paypal_order_path(@order), :method=>:put

  -elsif @order.printed?
    =button_to_function "Click here to print", "window.print();"                
    =link_to 'Home', root_path
    
  -elsif @order.queued?
    Your order has been sent to the shop.
    Keep this screen open to watch its progress.
    = periodically_call_remote :update=>'order_summary', :url=>summary_order_path(@order), :frequency=>30, :method=>'GET'

#order_summary
  =render :partial=>'summary'   
  
  =render :partial=>'price_warning'
